/*
Deployment script for test

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "test"
:setvar DefaultFilePrefix "test"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
/*
The column AccountId on table [dbo].[RefreshToken] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column AccountId in table [dbo].[RefreshToken] is currently  NCHAR (10) NULL but is being changed to  INT NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  INT NOT NULL.

The column Created on table [dbo].[RefreshToken] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column Created in table [dbo].[RefreshToken] is currently  NCHAR (10) NULL but is being changed to  TEXT NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  TEXT NOT NULL.

The type for column CreatedByIp in table [dbo].[RefreshToken] is currently  NCHAR (10) NULL but is being changed to  TEXT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  TEXT NULL.

The column Expires on table [dbo].[RefreshToken] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column Expires in table [dbo].[RefreshToken] is currently  NCHAR (10) NULL but is being changed to  TEXT NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  TEXT NOT NULL.

The type for column ReasonRevoked in table [dbo].[RefreshToken] is currently  NCHAR (10) NULL but is being changed to  TEXT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  TEXT NULL.

The type for column ReplacedByToken in table [dbo].[RefreshToken] is currently  NCHAR (10) NULL but is being changed to  TEXT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  TEXT NULL.

The type for column Revoked in table [dbo].[RefreshToken] is currently  NCHAR (10) NULL but is being changed to  TEXT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  TEXT NULL.

The type for column RevokedByIp in table [dbo].[RefreshToken] is currently  NCHAR (10) NULL but is being changed to  TEXT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  TEXT NULL.

The type for column Token in table [dbo].[RefreshToken] is currently  NCHAR (10) NULL but is being changed to  TEXT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  TEXT NULL.
*/
GO
PRINT N'Starting rebuilding table [dbo].[RefreshToken]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_RefreshToken] (
    [Id]              INT  IDENTITY (1, 1) NOT NULL,
    [AccountId]       INT  NOT NULL,
    [Token]           TEXT NULL,
    [Expires]         TEXT NOT NULL,
    [Created]         TEXT NOT NULL,
    [CreatedByIp]     TEXT NULL,
    [Revoked]         TEXT NULL,
    [RevokedByIp]     TEXT NULL,
    [ReplacedByToken] TEXT NULL,
    [ReasonRevoked]   TEXT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[RefreshToken])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RefreshToken] ON;
        INSERT INTO [dbo].[tmp_ms_xx_RefreshToken] ([Id], [AccountId], [Token], [Expires], [Created], [CreatedByIp], [Revoked], [RevokedByIp], [ReplacedByToken], [ReasonRevoked])
        SELECT   [Id],
                 [AccountId],
                 [Token],
                 [Expires],
                 [Created],
                 [CreatedByIp],
                 [Revoked],
                 [RevokedByIp],
                 [ReplacedByToken],
                 [ReasonRevoked]
        FROM     [dbo].[RefreshToken]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RefreshToken] OFF;
    END

DROP TABLE [dbo].[RefreshToken];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_RefreshToken]', N'RefreshToken';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
GO
PRINT N'Update complete.';


GO
